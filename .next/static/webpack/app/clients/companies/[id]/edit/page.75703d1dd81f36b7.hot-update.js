"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/clients/companies/[id]/edit/page",{

/***/ "(app-pages-browser)/./src/lib/actions/updateContact.ts":
/*!******************************************!*\
  !*** ./src/lib/actions/updateContact.ts ***!
  \******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   updateContactLocation: function() { return /* binding */ updateContactLocation; }\n/* harmony export */ });\n/* harmony import */ var _lib_supabase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/supabase */ \"(app-pages-browser)/./src/lib/supabase.ts\");\n\n// If you had additional imports in your original updateContact.ts, add them here, e.g.:\n// import { someUtility } from '@/utils/helpers';\nconsole.log(\"updateContact.ts: supabaseAdmin imported:\", {\n    hasFrom: !!createSupabaseClient().from,\n    hasAuth: !!createSupabaseClient().auth,\n    hasRpc: !!createSupabaseClient().rpc\n});\nasync function updateContactLocation(contactId, locationId) {\n    try {\n        // Update contact's location_id\n        const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"contacts\").update({\n            location_id: locationId,\n            updated_at: new Date().toISOString()\n        }).eq(\"id\", contactId).select();\n        if (error) {\n            throw new Error(\"Failed to update contact: \".concat(error.message));\n        }\n        if (!data || data.length === 0) {\n            throw new Error(\"No contact data returned after update\");\n        }\n        return {\n            success: true,\n            contactId,\n            locationId\n        };\n    } catch (error) {\n        console.error(\"Error in updateContactLocation:\", {\n            message: error instanceof Error ? error.message : \"Unknown error\"\n        });\n        throw error;\n    }\n} // If your original updateContact.ts had additional functions or exports, add them here, e.g.:\n // export async function deleteContact(contactId: string) {\n //   // Your code here\n // }\n // export async function updateContactDetails(contactId: string, details: any) {\n //   // Your code here\n // }\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9saWIvYWN0aW9ucy91cGRhdGVDb250YWN0LnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTBDO0FBRTFDLHdGQUF3RjtBQUN4RixpREFBaUQ7QUFFakRDLFFBQVFDLEdBQUcsQ0FBQyw2Q0FBNkM7SUFDdkRDLFNBQVMsQ0FBQyxDQUFDQyx1QkFBdUJDLElBQUk7SUFDdENDLFNBQVMsQ0FBQyxDQUFDRix1QkFBdUJHLElBQUk7SUFDdENDLFFBQVEsQ0FBQyxDQUFDSix1QkFBdUJLLEdBQUc7QUFDdEM7QUFFTyxlQUFlQyxzQkFBc0JDLFNBQWlCLEVBQUVDLFVBQXlCO0lBQ3RGLElBQUk7UUFDRiwrQkFBK0I7UUFDL0IsTUFBTSxFQUFFQyxJQUFJLEVBQUVDLEtBQUssRUFBRSxHQUFHLE1BQU1kLG1EQUFRQSxDQUNuQ0ssSUFBSSxDQUFDLFlBQ0xVLE1BQU0sQ0FBQztZQUNOQyxhQUFhSjtZQUNiSyxZQUFZLElBQUlDLE9BQU9DLFdBQVc7UUFDcEMsR0FDQ0MsRUFBRSxDQUFDLE1BQU1ULFdBQ1RVLE1BQU07UUFFVCxJQUFJUCxPQUFPO1lBQ1QsTUFBTSxJQUFJUSxNQUFNLDZCQUEyQyxPQUFkUixNQUFNUyxPQUFPO1FBQzVEO1FBRUEsSUFBSSxDQUFDVixRQUFRQSxLQUFLVyxNQUFNLEtBQUssR0FBRztZQUM5QixNQUFNLElBQUlGLE1BQU07UUFDbEI7UUFFQSxPQUFPO1lBQ0xHLFNBQVM7WUFDVGQ7WUFDQUM7UUFDRjtJQUNGLEVBQUUsT0FBT0UsT0FBTztRQUNkYixRQUFRYSxLQUFLLENBQUMsbUNBQW1DO1lBQy9DUyxTQUFTVCxpQkFBaUJRLFFBQVFSLE1BQU1TLE9BQU8sR0FBRztRQUNwRDtRQUNBLE1BQU1UO0lBQ1I7QUFDRixFQUVBLDhGQUE4RjtDQUM5RiwyREFBMkQ7Q0FDM0Qsc0JBQXNCO0NBQ3RCLElBQUk7Q0FDSixnRkFBZ0Y7Q0FDaEYsc0JBQXNCO0NBQ3RCLElBQUkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2xpYi9hY3Rpb25zL3VwZGF0ZUNvbnRhY3QudHM/NDA4MSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzdXBhYmFzZSB9IGZyb20gJ0AvbGliL3N1cGFiYXNlJztcclxuXHJcbi8vIElmIHlvdSBoYWQgYWRkaXRpb25hbCBpbXBvcnRzIGluIHlvdXIgb3JpZ2luYWwgdXBkYXRlQ29udGFjdC50cywgYWRkIHRoZW0gaGVyZSwgZS5nLjpcclxuLy8gaW1wb3J0IHsgc29tZVV0aWxpdHkgfSBmcm9tICdAL3V0aWxzL2hlbHBlcnMnO1xyXG5cclxuY29uc29sZS5sb2coJ3VwZGF0ZUNvbnRhY3QudHM6IHN1cGFiYXNlQWRtaW4gaW1wb3J0ZWQ6Jywge1xyXG4gIGhhc0Zyb206ICEhY3JlYXRlU3VwYWJhc2VDbGllbnQoKS5mcm9tLFxyXG4gIGhhc0F1dGg6ICEhY3JlYXRlU3VwYWJhc2VDbGllbnQoKS5hdXRoLFxyXG4gIGhhc1JwYzogISFjcmVhdGVTdXBhYmFzZUNsaWVudCgpLnJwY1xyXG59KTtcclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB1cGRhdGVDb250YWN0TG9jYXRpb24oY29udGFjdElkOiBzdHJpbmcsIGxvY2F0aW9uSWQ6IHN0cmluZyB8IG51bGwpIHtcclxuICB0cnkge1xyXG4gICAgLy8gVXBkYXRlIGNvbnRhY3QncyBsb2NhdGlvbl9pZFxyXG4gICAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VcclxuICAgICAgLmZyb20oJ2NvbnRhY3RzJylcclxuICAgICAgLnVwZGF0ZSh7XHJcbiAgICAgICAgbG9jYXRpb25faWQ6IGxvY2F0aW9uSWQsXHJcbiAgICAgICAgdXBkYXRlZF9hdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpXHJcbiAgICAgIH0pXHJcbiAgICAgIC5lcSgnaWQnLCBjb250YWN0SWQpXHJcbiAgICAgIC5zZWxlY3QoKTtcclxuXHJcbiAgICBpZiAoZXJyb3IpIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKGBGYWlsZWQgdG8gdXBkYXRlIGNvbnRhY3Q6ICR7ZXJyb3IubWVzc2FnZX1gKTtcclxuICAgIH1cclxuXHJcbiAgICBpZiAoIWRhdGEgfHwgZGF0YS5sZW5ndGggPT09IDApIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKCdObyBjb250YWN0IGRhdGEgcmV0dXJuZWQgYWZ0ZXIgdXBkYXRlJyk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgc3VjY2VzczogdHJ1ZSxcclxuICAgICAgY29udGFjdElkLFxyXG4gICAgICBsb2NhdGlvbklkXHJcbiAgICB9O1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBpbiB1cGRhdGVDb250YWN0TG9jYXRpb246Jywge1xyXG4gICAgICBtZXNzYWdlOiBlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IubWVzc2FnZSA6ICdVbmtub3duIGVycm9yJ1xyXG4gICAgfSk7XHJcbiAgICB0aHJvdyBlcnJvcjtcclxuICB9XHJcbn1cclxuXHJcbi8vIElmIHlvdXIgb3JpZ2luYWwgdXBkYXRlQ29udGFjdC50cyBoYWQgYWRkaXRpb25hbCBmdW5jdGlvbnMgb3IgZXhwb3J0cywgYWRkIHRoZW0gaGVyZSwgZS5nLjpcclxuLy8gZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGRlbGV0ZUNvbnRhY3QoY29udGFjdElkOiBzdHJpbmcpIHtcclxuLy8gICAvLyBZb3VyIGNvZGUgaGVyZVxyXG4vLyB9XHJcbi8vIGV4cG9ydCBhc3luYyBmdW5jdGlvbiB1cGRhdGVDb250YWN0RGV0YWlscyhjb250YWN0SWQ6IHN0cmluZywgZGV0YWlsczogYW55KSB7XHJcbi8vICAgLy8gWW91ciBjb2RlIGhlcmVcclxuLy8gfSJdLCJuYW1lcyI6WyJzdXBhYmFzZSIsImNvbnNvbGUiLCJsb2ciLCJoYXNGcm9tIiwiY3JlYXRlU3VwYWJhc2VDbGllbnQiLCJmcm9tIiwiaGFzQXV0aCIsImF1dGgiLCJoYXNScGMiLCJycGMiLCJ1cGRhdGVDb250YWN0TG9jYXRpb24iLCJjb250YWN0SWQiLCJsb2NhdGlvbklkIiwiZGF0YSIsImVycm9yIiwidXBkYXRlIiwibG9jYXRpb25faWQiLCJ1cGRhdGVkX2F0IiwiRGF0ZSIsInRvSVNPU3RyaW5nIiwiZXEiLCJzZWxlY3QiLCJFcnJvciIsIm1lc3NhZ2UiLCJsZW5ndGgiLCJzdWNjZXNzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/actions/updateContact.ts\n"));

/***/ })

});